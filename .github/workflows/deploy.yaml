name: deploy

on:
  push:
    branches:
      - master
      - develop

  workflow_dispatch:      

jobs:
  environment-set:
    outputs:
      branch: ${{ steps.extract-branch.outputs.branch }}
      environment-key: ${{ steps.setup-env.outputs.environment-key }}
      runner-label: ${{ steps.setup-label.outputs.runner-label }}
    name: environment-set
    runs-on: ubuntu-latest
  
    steps:
      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract-branch

      - name: Set environment name
        id: setup-env
        run: |
          echo environment-key=${{ steps.extract-branch.outputs.branch == 'master' && 'production' || 'staging' }} >> "$GITHUB_OUTPUT"

      - name: Set runner label
        id: setup-label
        run: |
          echo runner-label=${{ steps.extract-branch.outputs.branch == 'master' && 'asap-prod-vm' || 'asap-stg-vm' }} >> "$GITHUB_OUTPUT"

  deploy:  
    needs: environment-set
    runs-on: [self-hosted, Linux, X64, "${{ needs.environment-set.outputs.runner-label }}"]
    environment: ${{ needs.environment-set.outputs.environment-key }}

    steps:
      - uses: actions/checkout@v2

      - name: docker-compose
        run: |
          cd docker/deployment
          
          mkdir certificates \ 
          && wget "https://storage.yandexcloud.net/cloud-certs/CA.pem" \
            --output-document certificates/certificate.crt \
          && chmod 0655 certificates/certificate.crt

          KAFKA_HOST=${{ secrets.KAFKA_HOST }} \
          KAFKA_USERNAME=${{ secrets.KAFKA_USERNAME }} \
          KAFKA_PASSWORD=${{ secrets.KAFKA_PASSWORD }} \
          docker compose up -d --wait --wait-timeout 30